version: '3'

services:

  app:

    build: # se usa para construir una imagen a partir de un Dockerfile
      context: . # directorio donde se encuentra el Dockerfile
      dockerfile: Dockerfile # por defecto busca dockerfile pero con este par√°metro se puede especificar otro nombre
      target: ${STAGE} # especifica el stage del Dockerfile que debe utilizar

    volumes:
      - .:/app/ # monta todo el file system actual en el contenedor
      - /app/node_modules # monta el directorio node_modules del contenedor en el file system actual

    container_name: nest-app

    ports:
      - ${PORT}:${PORT}

    environment: # variables de entorno del proyecto al contenedor
      APP_VERSION: ${APP_VERSION}
      STAGE: ${STAGE}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      PORT: ${PORT}
      HOST_API: ${HOST_API}
      JWT_SECRET: ${JWT_SECRET}

  db:

    image: postgres:14.3
    restart: always
    ports:
      - "5432:5432"

    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}

    # Debe ser el mismo que DB_NAME del servicio anterior
    container_name: ${DB_NAME}

    volumes:
      - postgres-db:/var/lib/postgresql/data


volumes:
  postgres-db:
    external: false